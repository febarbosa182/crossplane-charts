---
# Source: aws-default-addons/templates/iampolicyclusterautoscaler.yaml
apiVersion: identity.aws.crossplane.io/v1alpha1
kind: IAMPolicy
metadata:
  name: aws-k8s-stack-cluster-autoscaler
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    name: aws-k8s-stack-cluster-autoscaler
    description: "IAM Policy for Cluster AutoScale"
    document: |-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup"
            ],
            "Resource": "*"
          }
        ]
      }
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iampolicyebscsi.yaml
apiVersion: identity.aws.crossplane.io/v1alpha1
kind: IAMPolicy
metadata:
  name: aws-k8s-stack-ebs-csi
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    name: aws-k8s-stack-ebs-csi
    description: "IAM Policy for EBS CSI"
    document: |-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": [
              "ec2:AttachVolume",
              "ec2:CreateSnapshot",
              "ec2:CreateTags",
              "ec2:CreateVolume",
              "ec2:DeleteSnapshot",
              "ec2:DeleteTags",
              "ec2:DeleteVolume",
              "ec2:DescribeAvailabilityZones",
              "ec2:DescribeInstances",
              "ec2:DescribeSnapshots",
              "ec2:DescribeTags",
              "ec2:DescribeVolumes",
              "ec2:DescribeVolumesModifications",
              "ec2:DetachVolume",
              "ec2:ModifyVolume"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }
        ]
      }
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iampolicyexternaldns.yaml
apiVersion: identity.aws.crossplane.io/v1alpha1
kind: IAMPolicy
metadata:
  name: aws-k8s-stack-external-dns
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    name: aws-k8s-stack-external-dns
    description: "IAM Policy for External DNS"
    document: |-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "route53:ChangeResourceRecordSets"
            ],
            "Resource": [
              "arn:aws:route53:::hostedzone/*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets"
            ],
            "Resource": [
                "*"
            ]
          }
        ]
      }
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iamroleclusterautoscaler.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  name: aws-k8s-stack-cluster-autoscaler
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    description: "IAM Role for Cluster Autoscaler on aws-k8s-stack cluster"
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Federated": [
                "arn:aws:iam::450377644710:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F"
              ]
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
              "StringLike": {
                "oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F:sub": "system:serviceaccount:kube-system:*-cluster-autoscaler"
              }
            }
          }
        ]
      }
    tags: []
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iamroleebscsi.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  name: aws-k8s-stack-ebs-csi
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    description: "IAM Role for EBS CSI on aws-k8s-stack cluster"
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Federated": [
                "arn:aws:iam::450377644710:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F"
              ]
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
              "StringEquals": {
                "oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F:sub": [
                  "system:serviceaccount:kube-system:ebs-csi-controller-sa",
                  "system:serviceaccount:kube-system:ebs-csi-node-sa",
                  "system:serviceaccount:kube-system:ebs-snapshot-controller"
                ]
              }
            }
          }
        ]
      }
    tags: []
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iamroleexternaldns.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  name: aws-k8s-stack-external-dns
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    description: "IAM Role for External DNS on aws-k8s-stack cluster"
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "",
            "Effect": "Allow",
            "Principal": {
              "Federated": [
                "arn:aws:iam::450377644710:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F"
              ]
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
              "StringEquals": {
                "oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F:aud": "sts.amazonaws.com",
                "oidc.eks.us-east-2.amazonaws.com/id/DEC2DFBF16F176B7F3DE6899A850564F:sub": "system:serviceaccount:external-dns:aws-k8s-stack-external-dns"
              }
            }
          }
        ]
      }
    tags: []
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iampolicyattclusterautoscaler.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: aws-k8s-stack-cluster-autoscaler
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    policyArnRef:
      name: aws-k8s-stack-cluster-autoscaler
    roleNameRef:
      name: aws-k8s-stack-cluster-autoscaler
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iampolicyattebscsi.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: aws-k8s-stack-ebs-csi
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    policyArnRef:
      name: aws-k8s-stack-ebs-csi
    roleNameRef:
      name: aws-k8s-stack-ebs-csi
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/iampolicyattexternaldns.yaml
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: aws-k8s-stack-external-dns
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  forProvider:
    policyArnRef:
      name: aws-k8s-stack-external-dns
    roleNameRef:
      name: aws-k8s-stack-external-dns
  deletionPolicy: Delete
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmclusterautoscaler.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-cluster-autoscaler
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: cluster-autoscaler
      repository: https://kubernetes.github.io/autoscaler
      version: 9.10.6
    namespace: kube-system
#   skipCreateNamespace: true
#   wait: true
    values:
      awsRegion: us-east-2
      cloudProvider: aws
      rbac:
        serviceAccount:
          annotations:
            eks.amazonaws.com/role-arn: "arn:aws:iam::450377644710:role/aws-k8s-stack-cluster-autoscaler"
      serviceMonitor:
        enabled: true
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmebscsi.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-ebs-csi
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: aws-ebs-csi-driver
      repository: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
      version: 2.1.0
    namespace: kube-system
#   skipCreateNamespace: true
#   wait: true
    values: 
      controller:
        region: us-east-2
        serviceAccount:
          annotations: 
            eks.amazonaws.com/role-arn: "arn:aws:iam::450377644710:role/aws-k8s-stack-ebs-csi"
      node:
        tolerateAllTaints: true
        serviceAccount:
          annotations: 
            eks.amazonaws.com/role-arn: "arn:aws:iam::450377644710:role/aws-k8s-stack-ebs-csi"
      storageClasses:
      
        - name: gp3
          provisioner: ebs.csi.aws.com
          
          parameters:
          
            csi.storage.k8s.io/fstype: ext4
            type: gp3
          
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
      
        - name: high-iops-ssd
          provisioner: ebs.csi.aws.com
          
          parameters:
          
            csi.storage.k8s.io/fstype: ext4
            iopsPerGB: "50"
            type: io1
          
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
      
        - name: medium-iops-ssd
          provisioner: ebs.csi.aws.com
          
          parameters:
          
            csi.storage.k8s.io/fstype: ext4
            iopsPerGB: "25"
            type: io1
          
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
      
        - name: throughput
          provisioner: ebs.csi.aws.com
          
          parameters:
          
            csi.storage.k8s.io/fstype: ext4
            type: st1
          
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
      
        - name: cold-storage
          provisioner: ebs.csi.aws.com
          
          parameters:
          
            csi.storage.k8s.io/fstype: ext4
            type: sc1
          
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
      
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmexternaldns.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-external-dns
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: external-dns
      repository: https://kubernetes-sigs.github.io/external-dns
      version: 1.2.0
    namespace: external-dns
#   skipCreateNamespace: true
#   wait: true
    values:
      serviceAccount:
        annotations: 
          eks.amazonaws.com/role-arn: "arn:aws:iam::450377644710:role/aws-k8s-stack-external-dns"
      podAnnotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::450377644710:role/aws-k8s-stack-external-dns"
      domainFilters: [ "itsmelgar.com" ]
      txtOwnerId: "aws-k8s-stack"
      serviceMonitor:
        enabled: true
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmflagger.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-flagger
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 99
  forProvider:
    chart:
      name: flagger
      repository: https://flagger.app
      version: 1.13.0
    namespace: linkerd
#   skipCreateNamespace: true
#   wait: true
    values:
      meshProvider: linkerd
      metricsServer: http://aws-k8s-stack-prometheus-s-prometheus:9090
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmgrafanadashboards.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-grafana-jenkins
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: configmap
      repository: https://ameijer.github.io/k8s-as-helm/
      version: 1.0.3
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      labels:
        grafana_dashboard: "3"
      annotations:
          k8s-sidecar-target-directory: "/tmp/dashboards/jenkins"
      configmapData:
        jenkins-performance-and-health-overview_rev1.json: |-
          
          {}
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmgrafanadashboards.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-grafana-kubernetes
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: configmap
      repository: https://ameijer.github.io/k8s-as-helm/
      version: 1.0.3
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      labels:
        grafana_dashboard: "2"
      annotations:
        k8s-sidecar-target-directory: "/tmp/dashboards/cluster"
      configmapData:
        kubernetes-ingress-controller-dashboard_rev2.json: |-
        
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmgrafanadashboards.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-grafana-nginx
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: configmap
      repository: https://ameijer.github.io/k8s-as-helm/
      version: 1.0.3
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      labels:
        grafana_dashboard: "4"
      annotations:
        k8s-sidecar-target-directory: "/tmp/dashboards/nginx"
      configmapData:
        kubernetes-ingress-controller-dashboard_rev2.json: {}
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmgrafanadashboards.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-grafana-linkerd-deployment
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: configmap
      repository: https://ameijer.github.io/k8s-as-helm/
      version: 1.0.3
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      labels:
        grafana_dashboard: "5"
      annotations:
          k8s-sidecar-target-directory: "/tmp/dashboards/linkerd"
      configmapData:
        kubernetes-ingress-controller-dashboard_rev2.json: {}
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmgrafanadashboards.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-grafana-linkerd-top-line
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: configmap
      repository: https://ameijer.github.io/k8s-as-helm/
      version: 1.0.3
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      labels:
        grafana_dashboard: "6"
      annotations:
          k8s-sidecar-target-directory: "/tmp/dashboards/linkerd"
      configmapData:
        linkerd-top-line_rev1.json: 
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmjaeger.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-jaeger
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: jaeger-operator
      repository: https://jaegertracing.github.io/helm-charts
      version: 2.23.0
    namespace: jaeger
#   skipCreateNamespace: true
#   wait: true
    values:
      jaeger:
        create: true
        namespace: jaeger
        spec: 
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
            hosts:
            - jaeger.itsmelgar.com
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmjenkins.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-jenkins
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: jenkins
      repository: https://charts.jenkins.io
      version: 3.5.17
    namespace: jenkins
#   skipCreateNamespace: true
#   wait: true
    values:
      controller:
        tag: "2.313-jdk11"
        adminUser: "admin"
        adminPassword: "admindemo"
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
          apiVersion: "networking.k8s.io/v1"
          ingressClassName: nginx
          hostName: jenkins.itsmelgar.com
        installPlugins:
        - kubernetes:1.30.1
        - kubernetes-cli:1.10.3
        - workflow-aggregator:2.6
        - git:4.8.2
        - configuration-as-code:1.53
        - command-launcher:1.6
        - docker-workflow:1.26
        - job-dsl:1.77
        - pipeline-utility-steps:2.10.0
        - blueocean:1.25.0
        - simple-theme-plugin:0.7
        - prometheus:2.0.10
        - aws-credentials:1.30
        - startup-trigger-plugin:2.9.3
        scriptApproval: []
        JCasC:
          defaultConfig: true
          configScripts: 
            welcome-message: |
              jenkins:
                systemMessage: Welcome to aws-k8s-stack CI\CD server.  This Jenkins is configured and managed 'as code'.
            configuration: |-
              jobs:
                - script: >
                    pipelineJob('app-sample') {
                      definition {
                        cps {
                          script("""\
                            @Library (['core','assembler']) _
                            properties([
                                parameters(
                                    [ string(name: 'REPO_BRANCH', defaultValue: 'main', description: 'git repository branch') ]
                                )
                            ])
                            params.each { k, v -> env[k] = v }
                            env.REPO_URL = "https://github.com/njguilhem2/crud-java.git"
                            env.TECH_TYPE= "java"
                            env.KUBE_NAMESPACE = "default"
                            env.HELM_RELEASE_NAME = "crud-java"
                            env.HELM_CHART_NAME = "chart"
                            env.DOCKER_IMAGE = "crud-java"
                            env.CI_IMAGE = "gradle:7.2.0-jdk11"
                            
                            
                            coreLibrary{}
                          """.stripIndent())
                        }
                      }
                    }
              unclassified:
                globalLibraries:
                  libraries:
                    - name: "assembler"
                      defaultVersion: "orange"
                      retriever:
                        modernSCM:
                          scm:
                            git:
                              remote: "https://github.com/febarbosa182/pipeline-assembler.git"
                    - name: "core"
                      defaultVersion: "orange"
                      retriever:
                        modernSCM:
                          scm:
                            git:
                              remote: "https://github.com/febarbosa182/pipeline-core.git"
                simple-theme-plugin:
                  elements:
                    - cssUrl:
                        url: "https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-deep-orange.css"  
        prometheus:
            enabled: true
      persistence:
        enabled: true
        storageClass: gp2
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmkubeprometheusstack.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-prometheus-stack
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: kube-prometheus-stack
      repository: https://prometheus-community.github.io/helm-charts
      version: 18.0.12
    namespace: monitoring
#   skipCreateNamespace: true
#   wait: true
    values: 
      alertmanager:
        ingress:
          enabled: true
          hosts: 
          - alertmanager.itsmelgar.com
          ingressClassName: nginx
          pathType: ImplementationSpecific
        #   annotations: {}
      grafana:
        adminPassword: admindemo
        ingress:
          enabled: true
          annotations: 
            kubernetes.io/ingress.class: nginx
          hosts:
          - grafana.itsmelgar.com
      prometheus:
        thanosIngress:
          enabled: true
          ingressClassName: nginx
        #   annotations: {}
          hosts: 
          - thanos-gateway.itsmelgar.com
          paths: 
          - /
          pathType: ImplementationSpecific
        ingress:
          enabled: true
          ingressClassName: nginx
        #   annotations: {}
          hosts:
          - prometheus.itsmelgar.com
          pathType: ImplementationSpecific
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmkubernetesdashboard.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-kubernetes-dashboard
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: kubernetes-dashboard
      repository: https://kubernetes.github.io/dashboard/
      version: 5.0.0
    namespace: kubernetes-dashboard
#   skipCreateNamespace: true
#   wait: true
    values: 
      extraArgs:
      - --enable-skip-login
      - --enable-insecure-login
      - --system-banner="Welcome to aws-k8s-stack Kubernetes Dashboard"
      rbac:
        clusterReadOnlyRole: true
      ingress:
        enabled: true
        ## Kubernetes Dashboard Ingress Class
        className: nginx
        paths:
        - / 
        hosts:
        - kubernetes-dashboard.itsmelgar.com
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmlinkerd.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-linkerd-cni
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: linkerd2-cni
      repository: https://helm.linkerd.io/stable
      version: 2.10.2
    namespace: linkerd-cni
#   skipCreateNamespace: true
#   wait: true
    values: 
      installNamespace: false
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmlinkerd.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-linkerd
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3  
  forProvider:
    chart:
      name: linkerd2
      repository: https://helm.linkerd.io/stable
      version: 2.10.2
    namespace: linkerd
#   skipCreateNamespace: true
#   wait: true
    values: 
      cniEnabled: true
      identityTrustAnchorsPEM: |
        -----BEGIN CERTIFICATE-----
        MIIBjTCCATSgAwIBAgIRAJi0jzX/mem7Kxprwg/6jQEwCgYIKoZIzj0EAwIwJTEj
        MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwOTE0MjI1
        MzU4WhcNMzEwOTEyMjI1MzU4WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
        c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAMVFNyeAXwMIX3a
        ++ngk/WqbdPJgr1o1KRYQ3PBfwcxgbFIkzMmanhIKccWTSWDckgG6WRKMVR7D46E
        qaNZdj6jRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
        A1UdDgQWBBQlRvpCrWhKBKW+GwBDok6ETJIARjAKBggqhkjOPQQDAgNHADBEAiBG
        d+EjmNNTkzqKNIbaOuqryeNpxtGDOn/dkvDvIUvdoQIgOCHCh065JQIjayzthSr8
        Tsjprz7lZUscGpib4SGqiSQ=
        -----END CERTIFICATE-----
      identity:
        issuer:
          tls:
            crtPEM: |
              -----BEGIN CERTIFICATE-----
              MIIBszCCAVmgAwIBAgIRAIAPIR5LFT2ZF6WqIWl1c/UwCgYIKoZIzj0EAwIwJTEj
              MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwOTE0MjI1
              NDM0WhcNMzEwOTEyMjI1NDM0WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk
              LmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAR8WZcDIb01
              Ulql765/LnkFzsA3hR1wgt8xZ4DXYHg0sebmmEWCZoDveIwTBkGpRw1gaCG3njSj
              mDTWkK5Dqp1Io2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB
              ADAdBgNVHQ4EFgQUnnOzVote3UCw7trnwpFUjox1jy8wHwYDVR0jBBgwFoAUJUb6
              Qq1oSgSlvhsAQ6JOhEySAEYwCgYIKoZIzj0EAwIDSAAwRQIgC157sXjG2xfmaEHl
              X0y+2iKFPVFjJUECo8WwlWQpkQQCIQD7XY5Bd4kNMtnHlY3mVJESTITDzj4P8Kyy
              VwOXGyKk9g==
              -----END CERTIFICATE-----
            keyPEM: |
              -----BEGIN EC PRIVATE KEY-----
              MHcCAQEEIIlwv/nIGgFP8AnfkI3hAlpVH8Tgaf+cpGQ1jiYVFyAEoAoGCCqGSM49
              AwEHoUQDQgAEfFmXAyG9NVJape+ufy55Bc7AN4UdcILfMWeA12B4NLHm5phFgmaA
              73iMEwZBqUcNYGght540o5g01pCuQ6qdSA==
              -----END EC PRIVATE KEY-----
          crtExpiry: "2031-09-12T19:54:58Z"
      installNamespace: false
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmlinkerd.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-linkerd-viz
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: linkerd-viz
      repository: https://helm.linkerd.io/stable
      version: 2.10.2
    namespace: linkerd-viz
#   skipCreateNamespace: true
#   wait: true
    values: 
      installNamespace: false
      prometheusUrl: "aws-k8s-stack-prometheus-s-prometheus:9090"
      grafanaUrl: "aws-k8s-stack-prometheus-stack-grafana:3000"
      # Set this to `jaeger.linkerd-jaeger.svc.<clusterDomain>` if you plan to use jaeger extension
      jaegerUrl: "aws-k8s-stack-jaeger-jaeger-operator-jaeger-collector:9411"
      grafana:
        enabled: false
      prometheus:
        enabled: false
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmlitmus.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-litmus
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: litmus
      repository: https://litmuschaos.github.io/litmus-helm/
      version: 2.1.1
    namespace: litmus
#   skipCreateNamespace: true
#   wait: true
    values: 
      ingress:
        enabled: true
        name: litmus-ingress
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/rewrite-target: /$1
        host:
          name: "litmus.itsmelgar.com"
          paths:
            frontend: /(.*)
            backend: /backend/(.*)
      portal:
        server:
          authServer:
            env:
              ADMIN_USERNAME: "admin"
              ADMIN_PASSWORD: "admindemo"
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmmetricsserver.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-metrics-server
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: metrics-server
      repository: https://charts.bitnami.com/bitnami
      version: 5.9.3
    namespace: kube-system
#   skipCreateNamespace: true
#   wait: true
    values: 
      apiService:
        create: true
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmnigxingress.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-ingress-nginx
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: ingress-nginx
      repository: https://kubernetes.github.io/ingress-nginx
      version: 4.0.1
    namespace: ingress-nginx
#   skipCreateNamespace: true
#   wait: true
    values:
      controller:
        service:
          annotations: 
            service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
            service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
            service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
            service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
            external-dns.alpha.kubernetes.io/hostname: itsmelgar.com.
        metrics:
          port: 10254
          # if this port is changed, change healthz-port: in extraArgs: accordingly
          enabled: true

          service:
            annotations: 
              prometheus.io/scrape: "true"
              prometheus.io/port: "10254"
          serviceMonitor:
            enabled: true
            namespace: "monitoring"
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmrookceph.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-rook-operator
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: rook-ceph
      repository: https://charts.rook.io/release
      version: v1.7.4
    namespace: rook-ceph
#   skipCreateNamespace: true
#   wait: true
    values: {}
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/helmrookceph.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: aws-k8s-stack-rook
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rollbackLimit: 3
  forProvider:
    chart:
      name: rook-ceph-cluster
      repository: https://charts.rook.io/release
      version: v1.7.4
    namespace: rook-ceph
#   skipCreateNamespace: true
#   wait: true
    values:
      monitoring:
        enabled: true
      toolbox:
        enabled: true
      ingress:
        dashboard: 
          annotations:
            kubernetes.io/ingress.class: nginx
          host:
            name: ceph-dashboard.itsmelgar.com
      cephClusterSpec:
        mon:
          allowMultiplePerNode: true
    set: []
    valuesFrom: []
  providerConfigRef:
    name: aws-k8s-stack
---
# Source: aws-default-addons/templates/providerconfig.yaml
apiVersion: helm.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: aws-k8s-stack
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-1"
  labels:
    helm.sh/chart: aws-default-addons-0.1.0
    app.kubernetes.io/name: aws-k8s-stack
    app.kubernetes.io/instance: aws-k8s-stack-addons
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  credentials:
    source: Secret
    secretRef:
      namespace: crossplane-system
      key: kubeconfig
      name: aws-k8s-stack-conn
